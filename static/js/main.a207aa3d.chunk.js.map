{"version":3,"sources":["atom/calculator.ts","atom/shopping.ts","design/color.ts","pages/Layout.tsx","pages/Calculator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["mainAtom","atomWithReset","formular","splitFomular","length","head","tail","slice","isOperator","onReadableFormular","atom","get","state","isNotEmpty","operator","join","onReadableEvaluation","result","mathjs","onWritableClearFormular","set","undefined","wirtable","onWritableAppendFormular","console","log","concat","newFormular","onWritableRemoveFormular","headOfHead","newTail","substring","readable","items","onReadableShoppingItems","onReadableSumShoppingItems","reduce","sum","current","price","onReadableSplitSumShoppingItems","strSum","upper3","less3","upper","less","Number","parseInt","toLocaleString","onReadableRatioShoppingItems","last3Number","onWritableAppendShoppingItem","update","onWritableRemoveShoppingItem","uid","filter","item","writable","onWritableRemoveAllShoppingItem","uiPrimaryRed","color","uiPrimaryOrange","uiPrimaryGreen","uiPrimaryFont","uiPrimaryInvertFont","StyledDivPageBox","styled","div","StyledDivPageHeading","lighten","alpha","toString","StyledDivPageBody","StyledStackHeading","Stack","StyledH1Formular","h1","StyledRegisteredShoppingItemBox","buttonHeight","textHeight","StyledRegisteredShoppingItems","StyledRegisteredShoppingEachItem","StyledStackFormularBox","StyledStackButtonBox","StyledStackControlButtonBox","StyledShoppingItemBox","Calculator","intl","useIntl","useAtomValue","evaluation","onAppendFormular","useUpdateAtom","onRemoveFormular","onClearFormular","onAppendShoppingItem","shoppingWritable","onRemoveShoppingItem","onRemoveAllShoppingItem","shoppingItems","shoppingReadable","sumShoppingItems","splitSumShoppingItems","ratioShoppingItems","minimumPrice","onHandleClickCalcularButton","useCallback","num","onHandleCalculateRatio","currentPrice","goalPrice","mul","floor","toNumber","onHandleCalculatePrice","total","sub","onHandleReachPrice","horizontal","style","paddingRight","Text","as","variant","Icon","iconName","formatMessage","id","map","DefaultButton","onClick","nanoid","width","className","classnames","textAlign","justifyContent","PrimaryButton","parsedPrice","isFalse","isNaN","uuid","replace","setTimeout","document","getElementById","scrollTop","scrollHeight","debug","appTheme","palette","App","initializeIcons","messages","korean","locale","defaultLocale","ThemeProvider","theme","basename","process","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","styles","css","emotionReset"],"mappings":"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","file":"static/js/main.a207aa3d.chunk.js","sourcesContent":["import { atomWithReset } from 'jotai/utils';\nimport { atom } from 'jotai';\nimport { isNotEmpty } from 'my-easy-fp';\nimport * as mathjs from 'mathjs';\n\ninterface ICalculatorPropsAtom {\n  formular: string[];\n  operator?: string;\n}\n\nconst defaultValue: ICalculatorPropsAtom = {\n  formular: [],\n};\n\nexport const mainAtom = atomWithReset(defaultValue);\n\nfunction splitFomular(formular: string[]): { head: string[]; tail: string } {\n  if (formular.length <= 0) {\n    return { head: [], tail: '' };\n  }\n\n  if (formular.length <= 1) {\n    return { head: [], tail: formular[0] };\n  }\n\n  const tail = formular[formular.length - 1];\n  const head = formular.slice(0, formular.length - 1);\n\n  return { head, tail };\n}\n\nfunction isOperator(formular: string) {\n  if (formular === '+') {\n    return true;\n  }\n\n  if (formular === '-') {\n    return true;\n  }\n\n  if (formular === '*') {\n    return true;\n  }\n\n  if (formular === '/') {\n    return true;\n  }\n\n  return false;\n}\n\nconst onReadableFormular = atom((get) => {\n  const state = get(mainAtom);\n\n  if (isNotEmpty(state.operator)) {\n    return [...state.formular, state.operator].join(' ');\n  }\n\n  return state.formular.join(' ');\n});\n\nconst onReadableEvaluation = atom((get) => {\n  try {\n    const state = get(mainAtom);\n\n    if (state.formular.length > 2) {\n      const result = mathjs.evaluate(state.formular.join(' '));\n      return `${result}`;\n    }\n\n    if (state.formular.length === 1) {\n      return `${state.formular[0]}`;\n    }\n\n    return '';\n  } catch {\n    return '';\n  }\n});\n\nconst onWritableClearFormular = atom<null, undefined>(null, (get, set) => {\n  const state = { ...get(mainAtom) };\n  state.formular = [];\n  state.operator = undefined;\n\n  set(mainAtom, state);\n});\n\nconst onWritableAppendFormular = atom<null, string>(null, (get, set, formular) => {\n  const state = get(mainAtom);\n\n  if (state.formular.length <= 0 && isOperator(formular)) {\n    console.log('첫 입력으로 연산자 들어와서 아무것도 안함');\n    return set(mainAtom, state);\n  }\n\n  if (isOperator(formular)) {\n    state.operator = formular;\n    console.log('연산자 들어옴');\n    return set(mainAtom, { ...state });\n  }\n\n  if (isNotEmpty(state.operator)) {\n    state.formular = state.formular.concat([state.operator, formular]);\n    state.operator = undefined;\n\n    console.log('연산자 있고, 공식도 추가함');\n\n    return set(mainAtom, { ...state });\n  }\n\n  console.log('연산자 없고, 뭔가 추가함');\n\n  const { head, tail } = splitFomular(state.formular);\n  const newFormular = head.concat([`${tail}${formular}`]);\n\n  state.formular = newFormular;\n  state.operator = undefined;\n\n  return set(mainAtom, { ...state });\n});\n\nconst onWritableRemoveFormular = atom<null, undefined>(null, (get, set) => {\n  const state = get(mainAtom);\n\n  if (state.formular.length <= 0) {\n    return set(mainAtom, state);\n  }\n\n  if (isNotEmpty(state.operator)) {\n    state.operator = undefined;\n    return set(mainAtom, { ...state });\n  }\n\n  if (state.formular[0].length <= 1) {\n    state.formular = [];\n    state.operator = undefined;\n\n    return set(mainAtom, { ...state });\n  }\n\n  const { head, tail } = splitFomular(state.formular);\n\n  if (head.length >= 2 && tail.length <= 1) {\n    const { head: headOfHead, tail: headOfTail } = splitFomular(head);\n\n    if (isOperator(headOfTail)) {\n      state.formular = headOfHead;\n      return set(mainAtom, { ...state });\n    }\n\n    state.formular = head;\n    return set(mainAtom, { ...state });\n  }\n\n  const newTail = tail.substring(0, tail.length - 1);\n  state.formular = [...head, newTail];\n\n  return set(mainAtom, { ...state });\n});\n\nexport const wirtable = {\n  onWritableAppendFormular,\n  onWritableRemoveFormular,\n  onWritableClearFormular,\n};\nexport const readable = { onReadableFormular, onReadableEvaluation };\n","import { atom } from 'jotai';\nimport { atomWithReset } from 'jotai/utils';\n\nexport interface IShoppingItem {\n  name?: string;\n  uid: string;\n  price: number;\n}\n\nconst defaultValue: { items: IShoppingItem[] } = {\n  items: [],\n};\n\nexport const mainAtom = atomWithReset(defaultValue);\n\nconst onReadableShoppingItems = atom<IShoppingItem[]>((get) => {\n  const state = get(mainAtom);\n  return state.items;\n});\n\nconst onReadableSumShoppingItems = atom<number>((get) => {\n  const state = get(mainAtom);\n  const sum = state.items.reduce<number>((sum, current) => {\n    return sum + current.price;\n  }, 0);\n\n  return sum;\n});\n\nconst onReadableSplitSumShoppingItems = atom<{ upper3: string; less3: string }>((get) => {\n  const state = get(mainAtom);\n  const sum = state.items.reduce<number>((sum, current) => {\n    return sum + current.price;\n  }, 0);\n\n  const strSum = `${sum}`;\n\n  if (strSum.length <= 3) {\n    return { upper3: '', less3: strSum };\n  }\n\n  const upper = strSum.substring(0, strSum.length - 3);\n  const less = strSum.substring(strSum.length - 3, strSum.length);\n\n  return {\n    upper3: Number.parseInt(upper).toLocaleString('en-US'),\n    less3: less,\n  };\n});\n\nconst onReadableRatioShoppingItems = atom<number>((get) => {\n  const state = get(mainAtom);\n  const sum = state.items.reduce<number>((sum, current) => {\n    return sum + current.price;\n  }, 0);\n\n  const strSum = `${sum}`;\n  const last3Number = strSum.substring(strSum.length - 3, strSum.length);\n  return Number.parseInt(last3Number);\n});\n\nconst onWritableAppendShoppingItem = atom<null, IShoppingItem>(null, (get, set, update) => {\n  const state = get(mainAtom);\n  state.items = [...state.items, update];\n\n  return set(mainAtom, { ...state });\n});\n\nconst onWritableRemoveShoppingItem = atom<null, string>(null, (get, set, uid) => {\n  const state = get(mainAtom);\n  state.items = state.items.filter((item) => item.uid !== uid);\n\n  return set(mainAtom, { ...state });\n});\n\nconst onWritableRemoveAllShoppingItem = atom<null, undefined>(null, (get, set) => {\n  const state = get(mainAtom);\n\n  return set(mainAtom, { ...state, items: [] });\n});\n\nexport const writable = {\n  onWritableAppendShoppingItem,\n  onWritableRemoveAllShoppingItem,\n  onWritableRemoveShoppingItem,\n};\nexport const readable = {\n  onReadableShoppingItems,\n  onReadableSumShoppingItems,\n  onReadableSplitSumShoppingItems,\n  onReadableRatioShoppingItems,\n};\n","import color from 'color';\n\nexport const uiPrimaryUX = color('#28a8ea');\nexport const uiPrimaryRed = color('#c1121f');\nexport const uiPrimaryOrange = color('#ff6000');\nexport const uiPrimaryGreen = color('#008000');\nexport const uiPrimaryFont = color('#333');\nexport const uiPrimaryInvertFont = color('#eee');\n","import styled from '@emotion/styled';\nimport { uiPrimaryFont } from '../design/color';\n\nexport const StyledDivPageBox = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport const StyledDivPageHeading = styled.div`\n  width: 100vw;\n  height: 30px;\n  box-shadow: ${uiPrimaryFont.lighten(0.7).alpha(0.8).toString()} 0px 3px 8px;\n`;\n\nexport const StyledDivPageBody = styled.div`\n  width: 100vw;\n  height: calc(100vh - 60px);\n`;\n","import styled from '@emotion/styled';\nimport { DefaultButton, PrimaryButton, Stack, Text, Icon } from '@fluentui/react';\nimport classnames from 'classnames';\nimport { useAtomValue, useUpdateAtom } from 'jotai/utils';\nimport * as mathjs from 'mathjs';\nimport { isFalse, isNotEmpty } from 'my-easy-fp';\nimport { nanoid } from 'nanoid';\nimport { useCallback } from 'react';\nimport { useIntl } from 'react-intl';\nimport * as uuid from 'uuid';\nimport { readable, wirtable } from '../atom/calculator';\nimport { readable as shoppingReadable, writable as shoppingWritable } from '../atom/shopping';\nimport {\n  uiPrimaryFont,\n  uiPrimaryGreen,\n  uiPrimaryInvertFont,\n  uiPrimaryOrange,\n  uiPrimaryRed,\n} from '../design/color';\nimport { StyledDivPageBody, StyledDivPageBox, StyledDivPageHeading } from './Layout';\n\nconst buttonHeight = 55;\nconst textHeight = 15;\n\nconst StyledStackHeading = styled(Stack)`\n  width: 100%;\n  height: 100%;\n  background-color: ${uiPrimaryFont.lighten(0.9).toString()};\n  justify-content: flex-start;\n  align-items: center;\n  padding-left: 2em;\n\n  h1 {\n    color: ${uiPrimaryInvertFont.lighten(0.1).toString()};\n  }\n`;\n\nconst StyledH1Formular = styled.h1`\n  color: ${uiPrimaryFont.lighten(0.1).toString()};\n  font-size: 13pt;\n  line-height: ${textHeight}pt;\n  height: ${textHeight}pt;\n`;\n\n// 제목이 60px라서 60을 더해줘야 제대로 계산이 된다\nconst StyledRegisteredShoppingItemBox = styled(Stack)`\n  height: calc(100vh - ${buttonHeight * 5 + 30}px - ${textHeight * 3}pt);\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n\nconst StyledRegisteredShoppingItems = styled(Stack)`\n  overflow-y: scroll;\n  padding-bottom: 8px;\n`;\n\nconst StyledRegisteredShoppingEachItem = styled(Stack)`\n  height: 30px;\n  align-items: center;\n`;\n\nconst StyledStackFormularBox = styled(Stack)`\n  padding-left: 10px;\n  padding-right: 10px;\n\n  .warn-red {\n    color: ${uiPrimaryRed.alpha(0.8).toString()};\n  }\n\n  .warn-orange {\n    color: ${uiPrimaryOrange.alpha(0.8).toString()};\n  }\n\n  .good-green {\n    color: ${uiPrimaryGreen.alpha(0.8).toString()};\n  }\n`;\n\nconst StyledStackButtonBox = styled(Stack)`\n  .ms-Button {\n    width: 25vw;\n    height: ${buttonHeight}px;\n  }\n`;\n\nconst StyledStackControlButtonBox = styled(Stack)`\n  .btn-register {\n    width: 40vw;\n    height: ${buttonHeight}px;\n  }\n\n  .btn-clear,\n  .btn-register-clear {\n    width: 30vw;\n    height: ${buttonHeight}px;\n  }\n`;\n\nconst StyledShoppingItemBox = styled(Stack)`\n  width: 90vw;\n\n  span {\n    font-size: 13pt;\n  }\n`;\n\nconst Calculator: React.FC = () => {\n  const intl = useIntl();\n  const formular = useAtomValue(readable.onReadableFormular);\n  const evaluation = useAtomValue(readable.onReadableEvaluation);\n  const onAppendFormular = useUpdateAtom(wirtable.onWritableAppendFormular);\n  const onRemoveFormular = useUpdateAtom(wirtable.onWritableRemoveFormular);\n  const onClearFormular = useUpdateAtom(wirtable.onWritableClearFormular);\n  const onAppendShoppingItem = useUpdateAtom(shoppingWritable.onWritableAppendShoppingItem);\n  const onRemoveShoppingItem = useUpdateAtom(shoppingWritable.onWritableRemoveShoppingItem);\n  const onRemoveAllShoppingItem = useUpdateAtom(shoppingWritable.onWritableRemoveAllShoppingItem);\n  const shoppingItems = useAtomValue(shoppingReadable.onReadableShoppingItems);\n  const sumShoppingItems = useAtomValue(shoppingReadable.onReadableSumShoppingItems);\n  const splitSumShoppingItems = useAtomValue(shoppingReadable.onReadableSplitSumShoppingItems);\n  const ratioShoppingItems = useAtomValue(shoppingReadable.onReadableRatioShoppingItems);\n  const minimumPrice = 5000;\n  const goalLastPrice = 990;\n\n  const onHandleClickCalcularButton = useCallback(\n    (num: string) => onAppendFormular(num),\n    [onAppendFormular],\n  );\n\n  const onHandleCalculateRatio = useCallback((price: number) => {\n    if (price < minimumPrice) {\n      return 0;\n    }\n\n    const currentPrice = mathjs.bignumber(price);\n    const goalPrice = mathjs.bignumber(goalLastPrice);\n\n    const ratio = currentPrice.div(goalPrice).mul(mathjs.bignumber(100));\n    const flooredRatio = ratio.mul(mathjs.bignumber(100)).floor().div(mathjs.bignumber(100));\n\n    return flooredRatio.toNumber();\n  }, []);\n\n  const onHandleCalculatePrice = useCallback((total: number, price: number) => {\n    if (total < minimumPrice) {\n      return mathjs\n        .bignumber(minimumPrice + goalLastPrice)\n        .sub(mathjs.bignumber(total))\n        .toNumber();\n    }\n\n    const currentPrice = mathjs.bignumber(price);\n    const goalPrice = mathjs.bignumber(goalLastPrice);\n\n    return goalPrice.sub(currentPrice).toNumber();\n  }, []);\n\n  const onHandleReachPrice = useCallback((total: number, price: number) => {\n    if (total < minimumPrice) {\n      return 'red';\n    }\n\n    if (price < 300) {\n      return 'red';\n    }\n\n    if (price < 600) {\n      return 'orange';\n    }\n\n    return 'green';\n  }, []);\n\n  return (\n    <StyledDivPageBox>\n      <StyledDivPageHeading>\n        <StyledStackHeading horizontal>\n          <Stack style={{ paddingRight: 8 }}>\n            <Text as=\"h1\" variant=\"large\">\n              <Icon iconName=\"Calculator\" />\n            </Text>\n          </Stack>\n          <Stack>\n            <Text as=\"h1\" variant=\"large\">\n              {intl.formatMessage({ id: 'calc.heading' })}\n            </Text>\n          </Stack>\n        </StyledStackHeading>\n      </StyledDivPageHeading>\n\n      <StyledDivPageBody>\n        <StyledRegisteredShoppingItemBox>\n          <StyledRegisteredShoppingItems id=\"styled-registered-shopping-item-box\">\n            {shoppingItems.map((item) => {\n              return (\n                <StyledRegisteredShoppingEachItem key={nanoid()} horizontal>\n                  <StyledShoppingItemBox>\n                    <span>{item.price.toLocaleString('en-US')}</span>\n                  </StyledShoppingItemBox>\n                  <DefaultButton onClick={() => onRemoveShoppingItem(item.uid)}>x</DefaultButton>\n                </StyledRegisteredShoppingEachItem>\n              );\n            })}\n          </StyledRegisteredShoppingItems>\n        </StyledRegisteredShoppingItemBox>\n\n        <Stack>\n          <StyledStackFormularBox horizontal>\n            <Stack horizontal style={{ width: '60vw' }}>\n              <Text\n                as=\"h1\"\n                variant=\"xLarge\"\n                style={{ width: '35%' }}\n                className={classnames({\n                  'warn-red': onHandleReachPrice(sumShoppingItems, ratioShoppingItems) === 'red',\n                  'warn-orange':\n                    onHandleReachPrice(sumShoppingItems, ratioShoppingItems) === 'orange',\n                  'good-green':\n                    onHandleReachPrice(sumShoppingItems, ratioShoppingItems) === 'green',\n                })}\n              >\n                {onHandleCalculateRatio(ratioShoppingItems)}\n                {'%'}\n              </Text>\n\n              <Text\n                as=\"h1\"\n                variant=\"xLarge\"\n                style={{ width: '65%' }}\n                className={classnames({\n                  'warn-red': onHandleReachPrice(sumShoppingItems, ratioShoppingItems) === 'red',\n                  'warn-orange':\n                    onHandleReachPrice(sumShoppingItems, ratioShoppingItems) === 'orange',\n                  'good-green':\n                    onHandleReachPrice(sumShoppingItems, ratioShoppingItems) === 'green',\n                })}\n              >\n                {onHandleCalculatePrice(sumShoppingItems, ratioShoppingItems)}원 부족\n              </Text>\n            </Stack>\n\n            <Stack style={{ width: '40vw', textAlign: 'right' }}>\n              {splitSumShoppingItems.upper3 !== '' ? (\n                <Stack horizontal style={{ justifyContent: 'flex-end' }}>\n                  <Text as=\"h1\" variant=\"xLarge\">\n                    {splitSumShoppingItems.upper3}\n                    {','}\n                  </Text>\n                  <Text as=\"h1\" variant=\"xLarge\">\n                    {splitSumShoppingItems.less3}\n                  </Text>\n                </Stack>\n              ) : (\n                <Text as=\"h1\" variant=\"xLarge\">\n                  {splitSumShoppingItems.less3}\n                </Text>\n              )}\n            </Stack>\n          </StyledStackFormularBox>\n\n          <StyledStackFormularBox>\n            <StyledH1Formular>{formular}</StyledH1Formular>\n          </StyledStackFormularBox>\n\n          <StyledStackFormularBox>\n            <StyledH1Formular style={{ textAlign: 'right' }}>\n              {evaluation !== '' ? `= ${evaluation}` : evaluation}\n            </StyledH1Formular>\n          </StyledStackFormularBox>\n        </Stack>\n\n        <Stack className=\"stack-calculator-btn-box\">\n          <StyledStackControlButtonBox horizontal>\n            <PrimaryButton\n              className=\"btn-register\"\n              onClick={() => {\n                try {\n                  const parsedPrice = Number.parseInt(evaluation);\n                  if (isFalse(Number.isNaN(parsedPrice))) {\n                    const uid = uuid.v4().replace(/-/g, '');\n\n                    onAppendShoppingItem({ price: parsedPrice, uid });\n                    onClearFormular();\n\n                    setTimeout(() => {\n                      const div = document.getElementById('styled-registered-shopping-item-box');\n\n                      if (isNotEmpty(div)) {\n                        console.log();\n                        div.scrollTop = div.scrollHeight;\n                      }\n                    }, 100);\n                  }\n                } catch {\n                  console.debug('오류 ㅠㅠ ');\n                }\n              }}\n            >\n              <Text variant=\"large\" style={{ color: uiPrimaryInvertFont.toString() }}>\n                등록\n              </Text>\n            </PrimaryButton>\n            <DefaultButton className=\"btn-register-clear\" onClick={() => onRemoveAllShoppingItem()}>\n              등록 초기화\n            </DefaultButton>\n            <DefaultButton className=\"btn-clear\" onClick={() => onClearFormular()}>\n              C\n            </DefaultButton>\n          </StyledStackControlButtonBox>\n\n          <StyledStackButtonBox horizontal>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('7')}>\n              <Text variant=\"xxLarge\">7</Text>\n            </DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('8')}>\n              <Text variant=\"xxLarge\">8</Text>\n            </DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('9')}>\n              <Text variant=\"xxLarge\">9</Text>\n            </DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('/')}>\n              <Text variant=\"xxLarge\">÷</Text>\n            </DefaultButton>\n          </StyledStackButtonBox>\n\n          <StyledStackButtonBox horizontal>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('4')}>\n              <Text variant=\"xxLarge\">4</Text>\n            </DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('5')}>\n              <Text variant=\"xxLarge\">5</Text>\n            </DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('6')}>\n              <Text variant=\"xxLarge\">6</Text>\n            </DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('*')}>\n              <Text variant=\"xxLarge\">{'×'}</Text>\n            </DefaultButton>\n          </StyledStackButtonBox>\n\n          <StyledStackButtonBox horizontal>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('1')}>\n              <Text variant=\"xxLarge\">1</Text>\n            </DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('2')}>\n              <Text variant=\"xxLarge\">2</Text>\n            </DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('3')}>\n              <Text variant=\"xxLarge\">3</Text>\n            </DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('-')}>\n              <Text variant=\"xxLarge\">-</Text>\n            </DefaultButton>\n          </StyledStackButtonBox>\n\n          <StyledStackButtonBox horizontal>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('0')}>\n              <Text variant=\"xxLarge\">0</Text>\n            </DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('.')}>\n              <Text variant=\"xxLarge\">.</Text>\n            </DefaultButton>\n            <DefaultButton onClick={() => onRemoveFormular()}>\n              <Text variant=\"xxLarge\">{'<'}</Text>\n            </DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('+')}>\n              <Text variant=\"xxLarge\">+</Text>\n            </DefaultButton>\n          </StyledStackButtonBox>\n\n          {/* <StyledStackButtonBox horizontal>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('00')}>00</DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('000')}>000</DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('990')}>990</DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('90')}>90</DefaultButton>\n          </StyledStackButtonBox> */}\n        </Stack>\n      </StyledDivPageBody>\n    </StyledDivPageBox>\n  );\n};\n\nexport default Calculator;\n","import React from 'react';\nimport { initializeIcons } from '@fluentui/font-icons-mdl2';\nimport { PartialTheme, ThemeProvider } from '@fluentui/react';\nimport korean from './i18n/korean.json';\nimport { IntlProvider } from 'react-intl';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Calculator from './pages/Calculator';\n\nconst appTheme: PartialTheme = {\n  palette: {},\n};\n\nconst App: React.FC = () => {\n  initializeIcons();\n\n  return (\n    <IntlProvider messages={korean} locale=\"ko\" defaultLocale=\"ko\">\n      <ThemeProvider theme={appTheme}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Routes>\n            <Route path=\"/\" element={<Calculator />} />\n          </Routes>\n        </BrowserRouter>\n      </ThemeProvider>\n    </IntlProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport emotionReset from 'emotion-reset';\nimport { Global, css } from '@emotion/react';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Global\n      styles={css`\n        ${emotionReset}\n\n        html {\n          -ms-touch-action: manipulation;\n          touch-action: manipulation;\n        }\n\n        *,\n        *::after,\n        *::before {\n          box-sizing: border-box;\n          -moz-osx-font-smoothing: grayscale;\n          -webkit-font-smoothing: antialiased;\n          font-smoothing: antialiased;\n        }\n      `}\n    />\n\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}