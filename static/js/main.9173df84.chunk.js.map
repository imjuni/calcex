{"version":3,"sources":["atom/calculator.ts","atom/shopping.ts","design/color.ts","pages/Layout.tsx","pages/Calculator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["mainAtom","atomWithReset","formular","splitFomular","length","head","tail","slice","isOperator","onReadableFormular","atom","get","state","isNotEmpty","operator","join","onReadableEvaluation","result","mathjs","onWritableClearFormular","set","undefined","wirtable","onWritableAppendFormular","concat","newFormular","onWritableRemoveFormular","headOfHead","newTail","substring","readable","items","onReadableShoppingItems","onReadableSumShoppingItems","reduce","sum","current","price","writable","onWritableAppendShoppingItem","update","onWritableREmoveShoppingItem","uid","filter","item","uiPrimaryUX","color","uiPrimaryFont","StyledDivPageBox","styled","div","StyledDivPageHeading","lighten","alpha","toString","StyledDivPageBody","StyledStackHeading","Stack","StyledStackFormular","h1","StyledRegisteredShoppingItemBox","StyledRegisteredShoppingItems","StyledRegisteredShoppingEachItem","StyledStackFormularBox","StyledStackButtonBox","StyledStackControlButtonBox","StyledShoppingItemBox","Calculator","intl","useIntl","useAtomValue","evaluation","onAppendFormular","useUpdateAtom","onRemoveFormular","onClearFormular","onAppendShoppingItem","shoppingWritable","shoppingItems","shoppingReadable","sumShoppingItems","onHandleClickCalcularButton","useCallback","num","Text","as","variant","formatMessage","id","map","horizontal","DefaultButton","style","textAlign","PrimaryButton","onClick","parsedPrice","Number","parseInt","isFalse","isNaN","uuid","replace","console","debug","appTheme","palette","App","initializeIcons","log","process","messages","korean","locale","defaultLocale","ThemeProvider","theme","basename","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","styles","css","emotionReset","document","getElementById"],"mappings":"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","file":"static/js/main.9173df84.chunk.js","sourcesContent":["import { atomWithReset } from 'jotai/utils';\nimport { atom } from 'jotai';\nimport { isNotEmpty } from 'my-easy-fp';\nimport * as mathjs from 'mathjs';\n\ninterface ICalculatorPropsAtom {\n  formular: string[];\n  operator?: string;\n}\n\nconst defaultValue: ICalculatorPropsAtom = {\n  formular: [],\n};\n\nexport const mainAtom = atomWithReset(defaultValue);\n\nfunction splitFomular(formular: string[]): { head: string[]; tail: string } {\n  if (formular.length <= 0) {\n    return { head: [], tail: '' };\n  }\n\n  if (formular.length <= 1) {\n    return { head: [], tail: formular[0] };\n  }\n\n  const tail = formular[formular.length - 1];\n  const head = formular.slice(0, formular.length - 1);\n\n  return { head, tail };\n}\n\nfunction isOperator(formular: string) {\n  if (formular === '+') {\n    return true;\n  }\n\n  if (formular === '-') {\n    return true;\n  }\n\n  if (formular === '*') {\n    return true;\n  }\n\n  if (formular === '/') {\n    return true;\n  }\n\n  return false;\n}\n\nconst onReadableFormular = atom((get) => {\n  const state = get(mainAtom);\n\n  if (isNotEmpty(state.operator)) {\n    return [...state.formular, state.operator].join(' ');\n  }\n\n  return state.formular.join(' ');\n});\n\nconst onReadableEvaluation = atom((get) => {\n  try {\n    const state = get(mainAtom);\n\n    if (state.formular.length > 2) {\n      const result = mathjs.evaluate(state.formular.join(' '));\n      return `${result}`;\n    }\n\n    if (state.formular.length === 1) {\n      return `${state.formular[0]}`;\n    }\n\n    return '';\n  } catch {\n    return '';\n  }\n});\n\nconst onWritableClearFormular = atom<null, undefined>(null, (get, set) => {\n  const state = { ...get(mainAtom) };\n  state.formular = [];\n  state.operator = undefined;\n\n  set(mainAtom, state);\n});\n\nconst onWritableAppendFormular = atom<null, string>(null, (get, set, formular) => {\n  const state = get(mainAtom);\n\n  if (state.formular.length <= 0 && isOperator(formular)) {\n    return set(mainAtom, state);\n  }\n\n  if (isOperator(formular)) {\n    state.operator = formular;\n    return set(mainAtom, { ...state });\n  }\n\n  if (isNotEmpty(state.operator)) {\n    state.formular = state.formular.concat([state.operator, formular]);\n    state.operator = undefined;\n\n    return set(mainAtom, { ...state });\n  }\n\n  const { head, tail } = splitFomular(state.formular);\n  const newFormular = head.concat([`${tail}${formular}`]);\n\n  state.formular = newFormular;\n  state.operator = undefined;\n\n  return set(mainAtom, { ...state });\n});\n\nconst onWritableRemoveFormular = atom<null, undefined>(null, (get, set) => {\n  const state = get(mainAtom);\n\n  if (state.formular.length <= 0) {\n    return set(mainAtom, state);\n  }\n\n  if (isNotEmpty(state.operator)) {\n    state.operator = undefined;\n    return set(mainAtom, { ...state });\n  }\n\n  if (state.formular[0].length <= 1) {\n    state.formular = [];\n    state.operator = undefined;\n\n    return set(mainAtom, { ...state });\n  }\n\n  const { head, tail } = splitFomular(state.formular);\n\n  if (head.length >= 2 && tail.length <= 1) {\n    const { head: headOfHead, tail: headOfTail } = splitFomular(head);\n\n    if (isOperator(headOfTail)) {\n      state.formular = headOfHead;\n      return set(mainAtom, { ...state });\n    }\n\n    state.formular = head;\n    return set(mainAtom, { ...state });\n  }\n\n  const newTail = tail.substring(0, tail.length - 1);\n  state.formular = [...head, newTail];\n\n  return set(mainAtom, { ...state });\n});\n\nexport const wirtable = {\n  onWritableAppendFormular,\n  onWritableRemoveFormular,\n  onWritableClearFormular,\n};\nexport const readable = { onReadableFormular, onReadableEvaluation };\n","import { atom } from 'jotai';\nimport { atomWithReset } from 'jotai/utils';\n\nexport interface IShoppingItem {\n  name?: string;\n  uid: string;\n  price: number;\n}\n\nconst defaultValue: { items: IShoppingItem[] } = {\n  items: [],\n};\n\nexport const mainAtom = atomWithReset(defaultValue);\n\nconst onReadableShoppingItems = atom<IShoppingItem[]>((get) => {\n  const state = get(mainAtom);\n  return state.items;\n});\n\nconst onReadableSumShoppingItems = atom<number>((get) => {\n  const state = get(mainAtom);\n  const sum = state.items.reduce<number>((sum, current) => {\n    return sum + current.price;\n  }, 0);\n\n  return sum;\n});\n\nconst onWritableAppendShoppingItem = atom<null, IShoppingItem>(null, (get, set, update) => {\n  const state = get(mainAtom);\n  state.items = [...state.items, update];\n\n  return set(mainAtom, { ...state });\n});\n\nconst onWritableREmoveShoppingItem = atom<null, string>(null, (get, set, uid) => {\n  const state = get(mainAtom);\n  state.items = state.items.filter((item) => item.uid !== uid);\n\n  return set(mainAtom, { ...state });\n});\n\nexport const writable = { onWritableAppendShoppingItem, onWritableREmoveShoppingItem };\nexport const readable = { onReadableShoppingItems, onReadableSumShoppingItems };\n","import color from 'color'\n\nexport const uiPrimaryUX = color('#28a8ea');\nexport const uiPrimaryFont = color('#333');\nexport const uiPrimaryInvertFont = color('#eee');\n","import styled from \"@emotion/styled\";\nimport { uiPrimaryUX } from \"../design/color\";\n\nexport const StyledDivPageBox = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport const StyledDivPageHeading = styled.div`\n  width: 100vw;\n  height: 60px;\n  box-shadow: ${uiPrimaryUX.lighten(0.2).alpha(0.8).toString()} 0px 3px 8px;\n`;\n\nexport const StyledDivPageBody = styled.div`\n  width: 100vw;\n  height: calc(100vh - 60px);\n`;\n","import styled from '@emotion/styled';\nimport { DefaultButton, PrimaryButton, Stack, Text } from '@fluentui/react';\nimport { useAtomValue, useUpdateAtom } from 'jotai/utils';\nimport { isFalse } from 'my-easy-fp';\nimport { useCallback } from 'react';\nimport { useIntl } from 'react-intl';\nimport * as uuid from 'uuid';\nimport { readable, wirtable } from '../atom/calculator';\nimport { readable as shoppingReadable, writable as shoppingWritable } from '../atom/shopping';\nimport { uiPrimaryFont, uiPrimaryUX } from '../design/color';\nimport { StyledDivPageBody, StyledDivPageBox, StyledDivPageHeading } from './Layout';\n\nconst StyledStackHeading = styled(Stack)`\n  width: 100%;\n  height: 100%;\n  background-color: ${uiPrimaryUX.toString()};\n  justify-content: center;\n  padding-left: 2em;\n\n  h1 {\n    color: ${uiPrimaryUX.lighten(0.7).toString()};\n  }\n`;\n\nconst StyledStackFormular = styled.h1`\n  color: ${uiPrimaryFont.lighten(0.1).toString()};\n  font-size: 13pt;\n  line-height: 15pt;\n  height: 15pt;\n`;\n\nconst StyledRegisteredShoppingItemBox = styled(Stack)`\n  height: calc(100vh - 310px - 30pt);\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n\nconst StyledRegisteredShoppingItems = styled(Stack)`\n  height: calc(100vh - 340px - 30pt);\n`;\n\nconst StyledRegisteredShoppingEachItem = styled(Stack)`\n  height: 30px;\n  align-items: center;\n`;\n\nconst StyledStackFormularBox = styled(Stack)`\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n\nconst StyledStackButtonBox = styled(Stack)`\n  .ms-Button {\n    width: 25vw;\n    height: 50px;\n  }\n`;\n\nconst StyledStackControlButtonBox = styled(Stack)`\n  .ms-Button {\n    width: 50vw;\n    height: 50px;\n  }\n`;\n\nconst StyledShoppingItemBox = styled(Stack)`\n  width: 90vw;\n\n  span {\n    font-size: 13pt;\n  }\n`;\n\nconst Calculator: React.FC = () => {\n  const intl = useIntl();\n  const formular = useAtomValue(readable.onReadableFormular);\n  const evaluation = useAtomValue(readable.onReadableEvaluation);\n  const onAppendFormular = useUpdateAtom(wirtable.onWritableAppendFormular);\n  const onRemoveFormular = useUpdateAtom(wirtable.onWritableRemoveFormular);\n  const onClearFormular = useUpdateAtom(wirtable.onWritableClearFormular);\n  const onAppendShoppingItem = useUpdateAtom(shoppingWritable.onWritableAppendShoppingItem);\n  const shoppingItems = useAtomValue(shoppingReadable.onReadableShoppingItems);\n  const sumShoppingItems = useAtomValue(shoppingReadable.onReadableSumShoppingItems);\n\n  const onHandleClickCalcularButton = useCallback(\n    (num: string) => onAppendFormular(num),\n    [onAppendFormular],\n  );\n\n  return (\n    <StyledDivPageBox>\n      <StyledDivPageHeading>\n        <StyledStackHeading>\n          <Text as=\"h1\" variant=\"xxLarge\">\n            {intl.formatMessage({ id: 'calc.heading' })}\n          </Text>\n        </StyledStackHeading>\n      </StyledDivPageHeading>\n\n      <StyledDivPageBody>\n        <StyledRegisteredShoppingItemBox>\n          <StyledRegisteredShoppingItems>\n            {shoppingItems.map((item) => {\n              return (\n                <StyledRegisteredShoppingEachItem horizontal>\n                  <StyledShoppingItemBox>\n                    <span>{item.price}</span>\n                  </StyledShoppingItemBox>\n                  <DefaultButton>x</DefaultButton>\n                </StyledRegisteredShoppingEachItem>\n              );\n            })}\n          </StyledRegisteredShoppingItems>\n\n          <StyledStackFormularBox style={{ textAlign: 'right' }}>\n            <StyledStackFormular>{sumShoppingItems}</StyledStackFormular>\n          </StyledStackFormularBox>\n        </StyledRegisteredShoppingItemBox>\n\n        <Stack>\n          <StyledStackFormularBox>\n            <StyledStackFormular>{formular}</StyledStackFormular>\n          </StyledStackFormularBox>\n\n          <StyledStackFormularBox>\n            <StyledStackFormular style={{ textAlign: 'right' }}>\n              {evaluation !== '' ? `= ${evaluation}` : evaluation}\n            </StyledStackFormular>\n          </StyledStackFormularBox>\n        </Stack>\n\n        <StyledStackControlButtonBox horizontal>\n          <PrimaryButton\n            onClick={() => {\n              try {\n                const parsedPrice = Number.parseInt(evaluation);\n                if (isFalse(Number.isNaN(parsedPrice))) {\n                  const uid = uuid.v4().replace(/-/g, '');\n\n                  onAppendShoppingItem({ price: parsedPrice, uid });\n                  onClearFormular();\n                }\n              } catch {\n                console.debug('오류 ㅠㅠ ');\n              }\n            }}\n          >\n            등록\n          </PrimaryButton>\n          <DefaultButton onClick={() => onClearFormular()}>C</DefaultButton>\n        </StyledStackControlButtonBox>\n\n        <Stack>\n          <StyledStackButtonBox horizontal>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('9')}>9</DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('8')}>8</DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('7')}>7</DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('/')}>÷</DefaultButton>\n          </StyledStackButtonBox>\n\n          <StyledStackButtonBox horizontal>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('6')}>6</DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('5')}>5</DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('4')}>4</DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('*')}>×</DefaultButton>\n          </StyledStackButtonBox>\n\n          <StyledStackButtonBox horizontal>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('3')}>3</DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('2')}>2</DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('1')}>1</DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('-')}>-</DefaultButton>\n          </StyledStackButtonBox>\n\n          <StyledStackButtonBox horizontal>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('0')}>0</DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('00')}>00</DefaultButton>\n            <DefaultButton onClick={() => onRemoveFormular()}>{'<'}</DefaultButton>\n            <DefaultButton onClick={() => onHandleClickCalcularButton('+')}>+</DefaultButton>\n          </StyledStackButtonBox>\n        </Stack>\n      </StyledDivPageBody>\n    </StyledDivPageBox>\n  );\n};\n\nexport default Calculator;\n","import React from \"react\";\nimport { initializeIcons } from \"@fluentui/font-icons-mdl2\";\nimport { PartialTheme, ThemeProvider } from \"@fluentui/react\";\nimport korean from \"./i18n/korean.json\";\nimport { IntlProvider } from \"react-intl\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Calculator from \"./pages/Calculator\";\n\nconst appTheme: PartialTheme = {\n  palette: {},\n};\n\nconst App: React.FC = () => {\n  initializeIcons();\n\n  console.log(\"테스트: \", process.env.PUBLIC_URL);\n\n  return (\n    <IntlProvider messages={korean} locale=\"ko\" defaultLocale=\"ko\">\n      <ThemeProvider theme={appTheme}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Routes>\n            <Route path=\"/\" element={<Calculator />} />\n          </Routes>\n        </BrowserRouter>\n      </ThemeProvider>\n    </IntlProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport emotionReset from 'emotion-reset'\nimport { Global, css } from '@emotion/react'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Global\n      styles={css`\n      ${emotionReset}\n\n      *, *::after, *::before {\n        box-sizing: border-box;\n        -moz-osx-font-smoothing: grayscale;\n        -webkit-font-smoothing: antialiased;\n        font-smoothing: antialiased;\n      }\n    `} />\n    \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}